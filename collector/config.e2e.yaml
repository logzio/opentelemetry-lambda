receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "localhost:4317"
      http:
        endpoint: "localhost:4318"
  telemetryapireceiver:
    types: ["platform", "function", "extension"]

processors:
  batch:
  # Jaeger (classic) rejects non-scalar tags (arrays/maps). Drop array attributes
  # (process.command_args, aws.log.group.names, process.tags) to prevent "invalid tag type" 500s.
  # If you need these values, stringify arrays with a transform processor instead of dropping.
  attributes/drop_array_tags:
    actions:
      - key: process.command_args
        action: delete
      - key: aws.log.group.names
        action: delete
      - key: process.tags
        action: delete
  resource/drop_array_tags:
    attributes:
      - key: process.command_args
        action: delete
      - key: aws.log.group.names
        action: delete
      - key: process.tags
        action: delete
  
exporters:
  logzio/logs:
    account_token: "${env:LOGZIO_LOGS_TOKEN}"
    region: "${env:LOGZIO_REGION}"
    headers:
      user-agent: logzio-opentelemetry-layer-logs
    timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 5s
      max_elapsed_time: 0s
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 512

  logzio/traces:
    account_token: "${env:LOGZIO_TRACES_TOKEN}"
    region: "${env:LOGZIO_REGION}"
    headers:
      user-agent: logzio-opentelemetry-layer-traces
    timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 5s
      max_elapsed_time: 0s
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 512

  prometheusremotewrite:
    endpoint: "https://listener.logz.io:8053"
    headers:
      Authorization: "Bearer ${env:LOGZIO_METRICS_TOKEN}"
      user-agent: logzio-opentelemetry-layer-metrics
    target_info:
      enabled: false
    timeout: 5s
    retry_on_failure:
      enabled: true
      initial_interval: 1s
      max_interval: 5s
      max_elapsed_time: 0s
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 512